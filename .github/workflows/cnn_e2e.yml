name: 'resnet e2e test'
on: 
  # pull_request:
  #   types: [review_requested]
  #   branches:
  #     - "*"
  workflow_dispatch:
    inputs:
      of_branch_or_commit:
        description: 'oneflow branch or commit'
        required: true
        default: 'master'

jobs:
  cancel_previous:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs of outdated commit
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
          all_but_latest: true
  find-build-cache:
    name: "Find build cache"
    runs-on: ubuntu-latest
    env:
      ONEFLOW_SRC: .
      OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
      OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
    outputs:
      matrix: ${{ steps.find-cache.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Checkout Oneflow-Inc/oneflow
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/oneflow
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: Oneflow-Inc/get-oneflow/cache-complete/matrix/build@4417f492e7e95b469e5f2abcf12669621443a47d
        name: find cache
        id: find-cache
        with:
          runner-labels: |
            self-hosted
            linux
            build
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          entries: |
            cu102
  build-manylinux:
    name: "Build manylinux"
    runs-on: ['self-hosted', 'linux', 'provision']
    needs: [find-build-cache]
    strategy:
      fail-fast: true
      max-parallel: 5
      matrix: ${{ fromJson(needs.find-build-cache.outputs.matrix) }}
    env:
      ONEFLOW_SRC: oneflow-src
      MANYLINUX_CACHE_DIR: ~/manylinux-cache-dir/${{ matrix.entry }}
      WHEELHOUSE_DIR: manylinux-wheelhouse
      SSH_TANK_HOST: 192.168.1.22
      SSH_TANK_PATH: /tmp
      OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
      OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
    steps:
      - name: Fix permissions
        run: |
          set -x
          docker run --rm -v $PWD:/p -w /p busybox chown -R $(id -u):$(id -g) .
      - name: Remove leftover cuda-installer.log
        run: |
          docker run --rm -v /tmp:/host/tmp -w /p busybox rm -f /host/tmp/cuda-installer.log
      - name: Checkout Oneflow-Inc/oneflow
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/oneflow
          ref: ${{ github.event.inputs.of_branch_or_commit }}
          path: ${{ env.ONEFLOW_SRC }}
      - uses: Oneflow-Inc/get-oneflow@4417f492e7e95b469e5f2abcf12669621443a47d
        name: Build manylinux cu102
        id: build-cuda
        with:
          cmake-init-cache: ${{ env.ONEFLOW_SRC }}/cmake/caches/ci/cuda.cmake
          build-script: ${{ env.ONEFLOW_SRC }}/ci/manylinux/build-gcc7.sh
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          oneflow-build-env: manylinux
          wheelhouse-dir: ${{ env.WHEELHOUSE_DIR }}
          clear-wheelhouse-dir: true
          self-hosted: true
          cuda-version: "10.2"
          manylinux-cache-dir: ${{ env.MANYLINUX_CACHE_DIR }}
          docker-run-use-system-http-proxy: false
          docker-run-use-lld: false
          retry-failed-build: true
          python-versions: |
            3.6
      - name: Upload bin
        if: ${{ !fromJson(matrix.cache-hit) && steps.build-cuda.outcome == 'success' }}
        uses: Oneflow-Inc/get-oneflow/degist/upload@4417f492e7e95b469e5f2abcf12669621443a47d
        with:
          digest: ${{ steps.save-cache.outputs.build-digest }}
          entry: ${{ matrix.entry }}
          ssh-tank-host: ${{ env.SSH_TANK_HOST }}
          ssh-tank-path: ${{ env.SSH_TANK_PATH }}
          src-dir: ${{ env.MANYLINUX_CACHE_DIR }}/build/bin
          dst-dir: bin
      - name: Upload whl
        if: ${{ !fromJson(matrix.cache-hit) && steps.build-cuda.outcome == 'success' }}
        uses: Oneflow-Inc/get-oneflow/degist/upload@4417f492e7e95b469e5f2abcf12669621443a47d
        with:
          digest: ${{ steps.save-cache.outputs.build-digest }}
          entry: ${{ matrix.entry }}
          ssh-tank-host: ${{ env.SSH_TANK_HOST }}
          ssh-tank-path: ${{ env.SSH_TANK_PATH }}
          src-dir: ${{ env.WHEELHOUSE_DIR }}
          dst-dir: whl
  # build: 
  #   name: 'Build and test this repo'
  #   runs-on: ['self-hosted', 'linux', 'provision']
  #   steps:
  #     - run: echo "oneflow branch or commit is ${{ github.event.inputs.of_branch_or_commit }}."
  # conda:
  #   name: Build with conda
  #   runs-on: ['self-hosted', 'linux', 'provision']
  #   steps:
  #     - name: Checkout actions/checkout@v2
  #       uses: actions/checkout@v2
  #     - name: Checkout Oneflow-Inc/oneflow
  #       uses: actions/checkout@v2
  #       with:
  #         repository: Oneflow-Inc/oneflow
  #         ref: ${{ github.event.inputs.of_branch_or_commit }}
  #         path: oneflow-src
  #     - name: Checkout Oneflow-Inc/conda-env
  #       uses: actions/checkout@v2
  #       with:
  #         repository: Oneflow-Inc/conda-env
  #         ref: 30a7f00eb48ee9009d85a848e720823e5054c66b
  #         path: conda-env
  #     - uses: Oneflow-Inc/get-oneflow@4417f492e7e95b469e5f2abcf12669621443a47d
  #       name: Build with gcc7
  #       with:
  #         cmake-init-cache: oneflow-src/cmake/caches/ci/gh-hosted/cpu-gcc.cmake
  #         oneflow-src: oneflow-src
  #         oneflow-build-env: conda
  #         conda-env-file: conda-env/dev/gcc7/environment-v2.yml
  #         conda-env-name: oneflow-dev-gcc7-v2

