name: 'resnet e2e test'
on: 
  # pull_request:
  #   types: [review_requested]
  #   branches:
  #     - "*"
  workflow_dispatch:
    inputs:
      of_branch_or_commit:
        description: 'oneflow branch or commit'
        required: true
        default: 'master'
      num_epochs:
        description: 'number of training epoches'
        required: true
        default: 50
      gpu_num_per_node:
        description: 'gpu number per node'
        required: true
        default: 8
env:
  ONEFLOW_SRC: oneflow-src
  OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
  OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
jobs:
  cancel_previous:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs of outdated commit
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
          all_but_latest: true
  trigger-release-oneflow:
    name: "Trigger release oneflow"
    runs-on: ubuntu-latest
    steps:
      - name: Trigger release oneflow
        run: |
            curl -XPOST -u "${{ secrets.ONEFLOW_RELEASE_NAME}}:${{secrets.ONEFLOW_RELEASE_TOKEN}}" \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/Oneflow-Inc/oneflow/actions/workflows/release.yaml/dispatches \
            --data '{"ref": "${{ github.event.inputs.of_branch_or_commit }}", "inputs": { "python_version":"3.8", "compute_platforms":"cu112" }}'

        # "inputs": { "python_version":"3.8", "compute_platforms":"cu112" }
        # run: |
        #     curl -XPOST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/Oneflow-Inc/oneflow/actions/workflows/release.yaml/dispatches --data '{"ref": "${{ github.event.inputs.of_branch_or_commit }}"}'

  # build-oneflow:
  #   name: "Build oneflow"
  #   # runs-on: ['self-hosted', 'linux', 'provision']
  #   runs-on: ['self-hosted', 'linux', 'x64', 'gpu-8-titan-v']
  #   needs: [find-build-cache]
  #   strategy:
  #     fail-fast: true
  #     max-parallel: 5
  #     matrix: ${{ fromJson(needs.find-build-cache.outputs.matrix) }}
  #   env:
  #     MANYLINUX_CACHE_DIR: ~/manylinux-cache-dir/${{ matrix.entry }}
  #     WHEELHOUSE_DIR: manylinux-wheelhouse
  #     # OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
  #     # OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
  #   steps:
  #     - name: Fix permissions
  #       run: |
  #         set -x
  #         docker run --rm -v $PWD:/p -w /p busybox chown -R $(id -u):$(id -g) .
  #     - name: Remove leftover cuda-installer.log
  #       run: |
  #         docker run --rm -v /tmp:/host/tmp -w /p busybox rm -f /host/tmp/cuda-installer.log
  #     - name: Checkout Oneflow-Inc/oneflow
  #       uses: actions/checkout@v2
  #       with:
  #         repository: Oneflow-Inc/oneflow
  #         ref: ${{ github.event.inputs.of_branch_or_commit }}
  #         path: ${{ env.ONEFLOW_SRC }}
  #     - uses: Oneflow-Inc/get-oneflow/cache-complete@2a9efceab8d45b725a687e73f870f9b75a15e472
  #       name: Save cache if successful
  #       id: save-cache
  #       timeout-minutes: 5
  #       with:
  #         oneflow-src: ${{ env.ONEFLOW_SRC }}
  #         entry: ${{ matrix.entry }}
  #         digest-type: build
  #         mark-as-completed: ${{ contains(matrix.runs-on, 'self-hosted') }}
  #     - name: Check digest and fail if cache result not identical to matrix
  #       if: ${{ fromJSON(steps.save-cache.outputs.cache-hit) != matrix.cache-hit }}
  #       run: |
  #         echo "::error file=test.yml,line=204,col=10::steps.save-cache.outputs.cache-hit != matrix.cache-hit"
  #         exit 1
  #     - uses: Oneflow-Inc/get-oneflow@2a9efceab8d45b725a687e73f870f9b75a15e472
  #       name: Build manylinux cu102
  #       id: build-cuda
  #       if: ${{ matrix.entry =='cu102' && !matrix.cache-hit }}
  #       with:
  #         cmake-init-cache: ${{ env.ONEFLOW_SRC }}/cmake/caches/ci/cuda.cmake
  #         build-script: ${{ env.ONEFLOW_SRC }}/ci/manylinux/build-gcc7.sh
  #         oneflow-src: ${{ env.ONEFLOW_SRC }}
  #         oneflow-build-env: manylinux
  #         wheelhouse-dir: ${{ env.WHEELHOUSE_DIR }}
  #         clear-wheelhouse-dir: true
  #         self-hosted: true
  #         cuda-version: "10.2"
  #         manylinux-cache-dir: ${{ env.MANYLINUX_CACHE_DIR }}
  #         docker-run-use-system-http-proxy: false
  #         docker-run-use-lld: false
  #         retry-failed-build: true
  #         python-versions: |
  #           3.7
  #     - name: Upload bin
  #       if: ${{ !fromJson(matrix.cache-hit) && steps.build-cuda.outcome == 'success' }}
  #       uses: Oneflow-Inc/get-oneflow/degist/upload@2a9efceab8d45b725a687e73f870f9b75a15e472
  #       with:
  #         digest: ${{ steps.save-cache.outputs.build-digest }}
  #         entry: ${{ matrix.entry }}
  #         ssh-tank-host: ${{ env.SSH_TANK_HOST }}
  #         ssh-tank-path: ${{ env.SSH_TANK_PATH }}
  #         src-dir: ${{ env.MANYLINUX_CACHE_DIR }}/build/bin
  #         dst-dir: bin
  #     - name: Upload whl
  #       if: ${{ !fromJson(matrix.cache-hit) && steps.build-cuda.outcome == 'success' }}
  #       uses: Oneflow-Inc/get-oneflow/degist/upload@2a9efceab8d45b725a687e73f870f9b75a15e472
  #       with:
  #         digest: ${{ steps.save-cache.outputs.build-digest }}
  #         entry: ${{ matrix.entry }}
  #         ssh-tank-host: ${{ env.SSH_TANK_HOST }}
  #         ssh-tank-path: ${{ env.SSH_TANK_PATH }}
  #         src-dir: ${{ env.WHEELHOUSE_DIR }}
  #         dst-dir: whl
  # # find-test-cache:
  # #   name: "Find test cache"
  # #   runs-on: ubuntu-latest
  # #   needs: [build-manylinux]
  # #   outputs:
  # #     matrix: ${{ steps.find-cache.outputs.matrix }}
  # #   steps:
  # #     - name: Checkout Oneflow-Inc/oneflow
  # #       uses: actions/checkout@v2
  # #       with:
  # #         repository: Oneflow-Inc/oneflow
  # #         ref: ${{ github.event.inputs.of_branch_or_commit }}
  # #         path: ${{ env.ONEFLOW_SRC }}
  # #     - uses: Oneflow-Inc/get-oneflow/cache-complete/matrix/test@2a9efceab8d45b725a687e73f870f9b75a15e472
  # #       name: find cache
  # #       id: find-cache
  # #       timeout-minutes: 5
  # #       with:
  # #         runner-labels: |
  # #           self-hosted
  # #           linux
  # #         oneflow-src: ${{ env.ONEFLOW_SRC }}
  # test:
  #   name: Test suite
  #   # needs: [find-test-cache]build-manylinux
  #   needs: [build-manylinux]
  #   # runs-on: ['self-hosted', 'linux', 'provision']
  #   runs-on: ['self-hosted', 'linux', 'x64', 'gpu-8-titan-v']
  #   env:
  #     TEST_CONTAINER_NAME: "oneflow_benchmark-run-id-${{ github.run_id }}-${{ matrix.entry }}-test"
  #     TEST_WITH_TORCH_IMG_TAG: registry.cn-beijing.aliyuncs.com/oneflow/test-with-pytorch-1.9.0:e7a497b41d8b7f1bce055b1f23d027f93b1557ae
  #   # strategy:
  #   #   fail-fast: true
  #   #   max-parallel: 5
  #   #   matrix: ${{ fromJson(needs.find-test-cache.outputs.matrix) }}
  #   steps:
  #     - name: Fix permissions
  #       # if: ${{ contains(matrix.runs-on, 'self-hosted') }}
  #       run: |
  #         set -x
  #         docker run --rm -v $PWD:/p -w /p busybox chown -R $(id -u):$(id -g) .
  #     - name: Checkout Oneflow-Inc/OneFlow-Benchmark
  #       uses: actions/checkout@v2
  #     - name: Checkout Oneflow-Inc/oneflow
  #       uses: actions/checkout@v2
  #       with:
  #         repository: Oneflow-Inc/oneflow
  #         ref: ${{ github.event.inputs.of_branch_or_commit }}
  #         path: ${{ env.ONEFLOW_SRC }}
  #     - name: Remove container
  #       timeout-minutes: 45
  #       # if: ${{ contains(matrix.runs-on, 'self-hosted') }}
  #       run: |
  #         docker rm -f ${{ env.TEST_CONTAINER_NAME }} || true
  #     - uses: Oneflow-Inc/get-oneflow/cache-complete@2a9efceab8d45b725a687e73f870f9b75a15e472
  #       name: Save cache if successful
  #       id: save-cache
  #       timeout-minutes: 5
  #       with:
  #         oneflow-src: ${{ env.ONEFLOW_SRC }}
  #         entry: cu102
  #         digest-type: test
  #         mark-as-completed: true
  #     # - name: Check digest and fail if cache result not identical to matrix
  #     #   if: ${{ fromJSON(steps.save-cache.outputs.cache-hit) != matrix.cache-hit }}
  #     #   run: |
  #     #     echo "::error file=test.yml,line=204,col=10::steps.save-cache.outputs.cache-hit != matrix.cache-hit"
  #     #     exit 1
  #     - name: Download wheel and binary
  #       # if: ${{ !fromJson(matrix.cache-hit) && contains(matrix.runs-on, 'self-hosted') }}
  #       uses: Oneflow-Inc/get-oneflow/degist/download@2a9efceab8d45b725a687e73f870f9b75a15e472
  #       id: download-digest
  #       timeout-minutes: 10
  #       with:
  #         digest: ${{ steps.save-cache.outputs.build-digest }}
  #         entry: cu102
  #         ssh-tank-host: ${{ env.SSH_TANK_HOST }}
  #         ssh-tank-path: ${{ env.SSH_TANK_PATH }}
  #         digest-cache-dir: '~/digest-cache-bm'
  #     - name: Enable Pytorch container
  #       run: |
  #         echo "TEST_IMG_TAG=${TEST_WITH_TORCH_IMG_TAG}" >> $GITHUB_ENV
  #     - name: Set environment variables
  #       # if: ${{ !fromJson(matrix.cache-hit) && contains(matrix.runs-on, 'self-hosted') }}
  #       run: |
  #         set -x
  #         echo "ONEFLOW_TEST_CACHE_DIR=$HOME/ci-cache/test_cache" >> $GITHUB_ENV
  #         echo "ONEFLOW_WHEEL_PATH=${{ steps.download-digest.outputs.entry-dir }}/whl" >> $GITHUB_ENV
  #     - name: Start container
  #       # if: ${{ !fromJson(matrix.cache-hit) && contains(matrix.runs-on, 'self-hosted') }}
  #       # working-directory: ${{ env.ONEFLOW_SRC }}
  #       env:
  #         ONEFLOW_BIN_PATH: ${{ steps.download-digest.outputs.entry-dir }}/bin
  #       run: |
  #         docker pull ${{ env.TEST_IMG_TAG }}
  #         docker run -d --rm --privileged --network host --shm-size=8g \
  #           --cap-add=SYS_PTRACE --security-opt seccomp=unconfined \
  #           --runtime=nvidia \
  #           -v /dataset:/dataset:ro -v /model_zoo:/model_zoo:ro \
  #           -v ${ONEFLOW_WHEEL_PATH}:${ONEFLOW_WHEEL_PATH}:ro \
  #           -v ${ONEFLOW_BIN_PATH}:${ONEFLOW_BIN_PATH}:ro \
  #           -v $HOME/test-container-cache/dot-local:/root/.local \
  #           -v $HOME/test-container-cache/dot-cache:/root/.cache \
  #           -e ONEFLOW_WHEEL_PATH=${ONEFLOW_WHEEL_PATH} \
  #           -e ONEFLOW_BIN_PATH=${ONEFLOW_BIN_PATH} \
  #           -e ONEFLOW_CI=1 \
  #           -v $PWD:$PWD \
  #           -w $PWD \
  #           -v ${ONEFLOW_TEST_CACHE_DIR}:${ONEFLOW_TEST_CACHE_DIR} \
  #           -e ONEFLOW_TEST_CACHE_DIR=${ONEFLOW_TEST_CACHE_DIR} \
  #           -e E2E_NUM_EPOCHS=${{ github.event.inputs.num_epochs }} \
  #           -e E2E_GPU_NUM_PER_NODE=${{ github.event.inputs.gpu_num_per_node }} \
  #           -e E2E_NODE_NUM=1 \
  #           -e E2E_BATCH_SIZE=32 \
  #           -e E2E_LEARNING_RATE=1.536 \
  #           -e E2E_SRC_ROOT=Classification/cnns \
  #           -e E2E_DATA_ROOT=/dataset/ImageNet/ofrecord \
  #           --name ${TEST_CONTAINER_NAME} \
  #           ${{ env.TEST_IMG_TAG }} \
  #           sleep 3600
  #     - name: Install OneFlow
  #       # if: ${{ !fromJson(matrix.cache-hit) && contains(matrix.runs-on, 'self-hosted') && (!fromJson(matrix.is-xla) || (fromJson(matrix.is-xla) && needs.changed_files.outputs.should_run_single_client_tests == '1')) }}
  #       run: |
  #         docker exec ${TEST_CONTAINER_NAME} python3 -m pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  #         docker exec ${TEST_CONTAINER_NAME} python3 -m pip install --find-links=${ONEFLOW_WHEEL_PATH} oneflow
  #     - name: Test container
  #       # if: ${{ !fromJson(matrix.cache-hit) && contains(matrix.runs-on, 'self-hosted') }}
  #       run: |
  #         docker exec ${{ env.TEST_CONTAINER_NAME }} bash ci/test/resnet50_e2e.sh 
  #     - name: Upload log 
  #       # if: ${{ always() && (steps.distributed_try_3.outcome=='failure' || steps.new_interface_distributed_try_3.outcome=='failure') && github.event.pull_request.head.repo.full_name == github.repository }}
  #       uses: ./.github/actions/upload_oss
  #       with:
  #         src_path: log
  #         oss_dst_path: oss://oneflow-log/OneFlow-Benchmark/${{ github.ref }}.${GITHUB_SHA::7}/oneflow/${{ github.event.inputs.of_branch_or_commit }}/${{github.run_id}}/log
  #         oss_access_key_id: ${{ secrets.OSS_ACCESS_KEY_ID }}
  #         oss_access_key_secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
  #         upload_core: false

      # - name: Run OneFlow doctor
      #   # if: ${{ !fromJson(matrix.cache-hit) && contains(matrix.runs-on, 'self-hosted') && (!fromJson(matrix.is-xla) || (fromJson(matrix.is-xla) && needs.changed_files.outputs.should_run_single_client_tests == '1')) }}
      #   run: |
      #     docker exec ${{ env.TEST_CONTAINER_NAME }} python3 -m oneflow --doctor
         
  # build: 
  #   name: 'Build and test this repo'
  #   runs-on: ['self-hosted', 'linux', 'provision']
  #   steps:
  #     - run: echo "oneflow branch or commit is ${{ github.event.inputs.of_branch_or_commit }}."
  # conda:
  #   name: Build with conda
  #   runs-on: ['self-hosted', 'linux', 'provision']
  #   steps:
  #     - name: Checkout actions/checkout@v2
  #       uses: actions/checkout@v2
  #     - name: Checkout Oneflow-Inc/oneflow
  #       uses: actions/checkout@v2
  #       with:
  #         repository: Oneflow-Inc/oneflow
  #         ref: ${{ github.event.inputs.of_branch_or_commit }}
  #         path: oneflow-src
  #     - name: Checkout Oneflow-Inc/conda-env
  #       uses: actions/checkout@v2
  #       with:
  #         repository: Oneflow-Inc/conda-env
  #         ref: 30a7f00eb48ee9009d85a848e720823e5054c66b
  #         path: conda-env
  #     - uses: Oneflow-Inc/get-oneflow@2a9efceab8d45b725a687e73f870f9b75a15e472
  #       name: Build with gcc7
  #       with:
  #         cmake-init-cache: oneflow-src/cmake/caches/ci/gh-hosted/cpu-gcc.cmake
  #         oneflow-src: oneflow-src
  #         oneflow-build-env: conda
  #         conda-env-file: conda-env/dev/gcc7/environment-v2.yml
  #         conda-env-name: oneflow-dev-gcc7-v2

